@use "../styles/common" as *;
@use "mixins" as Input;

.root {
  @include Input.root;
}

.inputIconContainer {
  @include Input.inputIconContainer;
}

.label {
  margin-bottom: design-token("space.1");
}

.labelHidden {
  margin-bottom: 0;
}

.input {
  @include Input.input;
}

.errorInput {
  @include Input.error;
}

.inputSizeSm {
  @include Input.inputSm;
}

.inputSizeLg {
  @include Input.inputLg;
}

.passwordInput {
  border-radius: component-token("inputfield", "border_radius") 0 0
    component-token("inputfield", "border_radius");
  border-right: none;
  padding-right: component-token("inputfield", "password-input-padding-right");
  &:focus,
  &:active {
    border-radius: component-token("inputfield", "border_radius");
    border-right: design-token("shape.border_width.1") solid
      component-token("inputfield", "color.border.engaged");
  }
}

.passwordBtn {
  background-color: component-token("inputfield", "color.background");
  color: component-token("inputfield", "color.text.gray.resting");
  border-radius: 0 component-token("inputfield", "border_radius")
    component-token("inputfield", "border_radius") 0;
  border: design-token("shape.border_width.1") solid
    component-token("inputfield", "color.border.resting");
  border-left: none;
  padding: calc(
    #{design-token("space.1.5")} - #{design-token("shape.border_width.1")}
  );
  padding-left: design-token("space.1.5");

  &:focus,
  &:active {
    border: design-token("shape.border_width.1") solid
      component-token("inputfield", "color.border.engaged");
    padding-left: calc(
      #{design-token("space.1.5")} - #{design-token("shape.border_width.1")}
    );
    border-radius: component-token("inputfield", "border_radius");
  }

  &:focus {
    box-shadow: component-token("inputfield", "box_shadow");
    outline: none;
    z-index: component-token("inputfield", "z-index");
  }

  &:hover {
    color: component-token("inputfield", "color.text.gray.bold");
  }

  &:disabled {
    background-color: component-token(
      "inputfield",
      "color.background.disabled"
    );
  }
}

.hovered {
  @include Input.hovered;
}

.input:active + .passwordBtn,
.input:focus + .passwordBtn {
  border-color: component-token("inputfield", "color.border.resting");
}

.textArea {
  resize: vertical;
  min-height: component-token("inputfield", "min-height-textarea");
}

.passwordBtnError,
.passwordBtnError:focus,
.passwordBtnError:active {
  border-color: component-token("inputfield", "color.border.danger");
}

.passwordBtnSm {
  padding-top: calc(
    #{design-token("space.1")} - #{design-token("shape.border_width.1")}
  );
  padding-bottom: calc(
    #{design-token("space.1")} - #{design-token("shape.border_width.1")}
  );
}

.passwordBtnLg {
  padding-top: calc(
    #{design-token("space.2")} - #{design-token("shape.border_width.1")}
  );
  padding-bottom: calc(
    #{design-token("space.2")} - #{design-token("shape.border_width.1")}
  );
}

.icon {
  background-color: component-token("inputfield", "color.background");
  color: component-token("inputfield", "color.text.gray.resting");
  border: 0;
  display: inline-block;
  position: absolute;
  top: design-token("space.1.5");
  z-index: component-token("inputfield", "z-index");
}

.iconDisabled {
  background-color: component-token("inputfield", "color.background.disabled");
}

.iconStart {
  left: design-token("space.1.5");
}

.iconEnd {
  right: design-token("space.1.5");
}

.iconStartInput {
  @include Input.iconStartInput;
}

.iconEndInput {
  @include Input.iconEndInput;
}

.inputIconPlacementSm {
  top: design-token("space.1");
}

.inputIconPlacementLg {
  top: design-token("space.2");
}

.caption {
  margin-top: design-token("space.0.5");
}
