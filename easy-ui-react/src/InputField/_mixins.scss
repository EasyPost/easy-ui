@use "../styles/common" as *;

@mixin root {
  @include component-token(
    "inputfield",
    "border_radius",
    design-token("shape.border_radius.md")
  );
  @include component-token(
    "inputfield",
    "box_shadow",
    design-token("shadow.input")
  );
  @include component-token(
    "inputfield",
    "color.text.resting",
    theme-token("color.primary.800")
  );
  @include component-token(
    "inputfield",
    "color.text.gray.resting",
    theme-token("color.neutral.500")
  );
  @include component-token(
    "inputfield",
    "color.text.subdued",
    theme-token("color.neutral.600")
  );
  @include component-token(
    "inputfield",
    "color.text.gray.bold",
    theme-token("color.neutral.800")
  );
  @include component-token(
    "inputfield",
    "color.text.disabled",
    theme-token("color.neutral.300")
  );
  @include component-token(
    "inputfield",
    "color.text.engaged",
    theme-token("color.neutral.900")
  );
  @include component-token(
    "inputfield",
    "color.text.danger",
    theme-token("color.negative.600")
  );
  @include component-token(
    "inputfield",
    "color.border.resting",
    theme-token("color.neutral.200")
  );
  @include component-token(
    "inputfield",
    "color.border.engaged",
    theme-token("color.neutral.500")
  );
  @include component-token(
    "inputfield",
    "color.border.danger",
    theme-token("color.negative.500")
  );
  @include component-token(
    "inputfield",
    "color.background",
    theme-token("color.neutral.000")
  );
  @include component-token(
    "inputfield",
    "color.background.disabled",
    theme-token("color.neutral.100")
  );
  @include component-token("inputfield", "max-height-sm", 32px);
  @include component-token(
    "inputfield",
    "z-index",
    design-token("z_index.input_icon")
  );
  display: flex;
  flex-direction: column;
}

@mixin input {
  @include font-style("body1");
  @include component-token("inputfield", "min-height-textarea", 48px);
  @include component-token(
    "inputfield",
    "icon-input-padding",
    design-token("space.6")
  );
  color: component-token("inputfield", "color.text.resting");
  background-color: component-token("inputfield", "color.background");
  border: design-token("shape.border_width.1") solid
    component-token("inputfield", "color.border.resting");
  border-radius: component-token("inputfield", "border_radius");
  padding: calc(
    #{design-token("space.1.5")} - #{design-token("shape.border_width.1")}
  );
  outline: none;
  position: relative;
  width: 100%;

  &:focus,
  &:active {
    color: component-token("inputfield", "color.text.engaged");
    border-color: component-token("inputfield", "color.border.engaged");
  }

  &:focus {
    box-shadow: component-token("inputfield", "box_shadow");
  }

  &::placeholder {
    color: component-token("inputfield", "color.text.subdued");
  }

  &:disabled {
    background-color: component-token(
      "inputfield",
      "color.background.disabled"
    );
    color: component-token("inputfield", "color.text.disabled");
  }
}

@mixin inputSm {
  @include font-style("body2");
  padding: calc(
      #{design-token("space.1")} - #{design-token("shape.border_width.1")}
    )
    calc(#{design-token("space.1.5")} - #{design-token("shape.border_width.1")});
  max-height: component-token("inputfield", "max-height-sm");
  @include component-token("inputfield", "password-input-padding-right", 0);
  @include component-token(
    "inputfield",
    "icon-input-padding",
    design-token("space.4.5")
  );
}

@mixin inputLg {
  padding: calc(
    #{design-token("space.2")} - #{design-token("shape.border_width.1")}
  );
  @include component-token("inputfield", "min-height-textarea", 56px);
  @include component-token("inputfield", "password-input-padding-right", 0);
}

@mixin error {
  color: component-token("inputfield", "color.text.danger");
  border-color: component-token("inputfield", "color.border.danger");

  &:focus,
  &:active {
    border-color: component-token("inputfield", "color.border.danger");
  }
}

@mixin hovered {
  border-color: component-token("inputfield", "color.border.engaged");
}

@mixin iconStartInput {
  padding-left: component-token("inputfield", "icon-input-padding");
}

@mixin iconEndInput {
  padding-right: component-token("inputfield", "icon-input-padding");
}

@mixin inputIconContainer {
  display: flex;
  align-items: center;
  position: relative;
}

@mixin textStartInput {
  padding-left: component-token("inputfield", "icon-input-padding");
}

@mixin textEndInput {
  padding-right: component-token("inputfield", "icon-input-padding");
}
