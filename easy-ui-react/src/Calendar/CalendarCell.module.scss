@use "../styles/common" as *;

@mixin rangeSelection {
  content: "";
  background-color: design-token("color.primary.100");
  position: absolute;
  height: 100%;
  width: 100%;
  z-index: -1;
  // Move by half of the container size.
  left: calc(
    (
        component-token("calendar-cell", "mobile-size") +
          design-token("space.0-5")
      ) /
      2
  );
  @include breakpoint-lg-up {
    left: calc(
      (component-token("calendar-cell", "size") + design-token("space.1")) / 2
    );
  }
}

.CellContainer {
  padding: design-token("space.0-5");
  .rangeSelectionStart:before {
    @include rangeSelection;
  }

  @include breakpoint-lg-up {
    padding: design-token("space.1.5") design-token("space.1");
  }
}

.CalendarCell {
  @include component-token("calendar-cell", "size", design-token("space.4-5"));
  @include component-token(
    "calendar-cell",
    "mobile-size",
    design-token("space.3")
  );
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: component-token("calendar-cell", "mobile-size");
  height: component-token("calendar-cell", "mobile-size");
  cursor: pointer;
  border-radius: design-token("shape.border_radius.lg");
  span {
    color: design-token("color.primary.800");
  }
  &:focus-visible {
    @include native-focus-ring;
  }

  &:hover:not(.isUnavailable, .isSelected, .isDisabled, .isReadOnly) {
    background-color: design-token("color.primary.100");
  }

  &.isOutsideCurrentMonth,
  &.isDisabled {
    span {
      color: design-token("color.neutral.300");
    }
  }

  &.isDisabled,
  &.isReadOnly {
    cursor: default;
  }

  &.isSelected {
    background-color: design-token("color.primary.500");
    span {
      color: design-token("color.neutral.000");
    }
  }

  &.isUnavailable {
    cursor: not-allowed;
    span {
      text-decoration: line-through;
    }
  }
  &.rangeSelection {
    background-color: design-token("color.primary.100");
    span {
      color: design-token("color.primary.800");
    }
    &:before {
      @include rangeSelection;
    }
  }

  &.roundedRight:before {
    content: none;
  }

  @include breakpoint-lg-up {
    width: component-token("calendar-cell", "size");
    height: component-token("calendar-cell", "size");
  }
}
