@use "../styles/common" as *;
@use "../InputField/mixins" as InputField;
@use "../Menu/mixins" as Menu;
@use "../styles/unstyled";

.MultiSelect {
  @include InputField.root;

  position: relative;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  gap: design-token("space.2");

  padding: calc(#{design-token("space.1")} - 1px) design-token("space.2");
  background-color: component-token("inputfield", "color.background");
  border: design-token("shape.border_width.1") solid
    component-token("inputfield", "color.border.resting");
  border-radius: component-token("inputfield", "border_radius");
  min-height: design-token("space.6");
  width: 100%;

  &:has(.input[data-focused="true"]) {
    box-shadow: component-token("inputfield", "box_shadow");
    border-color: component-token("inputfield", "color.border.engaged");
  }
}

.disabled {
  background-color: component-token("inputfield", "color.background.disabled");
  color: component-token("inputfield", "color.text.disabled");
}

.comboBoxContainer {
  display: flex;
  flex: 1 1 0%;
}

.comboBox {
  display: flex;
  flex: 1 1 0%;
}

.inputContainer {
  display: inline-flex;
  padding-left: 0;
  padding-right: 0;
  flex-wrap: wrap;
  flex: 1 1 0%;
  align-items: center;
}

.input {
  @include font-style("body1");
  flex: 1 1 0%;

  width: 100%;
  min-width: 120px;

  padding: design-token("space.1") 0;
  margin: calc(#{design-token("space.1")} * -1) 0;

  outline: none;
  background-color: transparent;
  border: 0;

  &:focus,
  &:active {
    color: component-token("inputfield", "color.text.engaged");
  }

  &::placeholder {
    color: component-token("inputfield", "color.text.subdued");
  }
}

.button {
  @include unstyled.button;

  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: design-token("space.3");
  height: design-token("space.3");
}

.popover {
  @include Menu.tokens;

  display: flex;
  flex-direction: column;
  max-width: none;

  background: component-token("menu", "color.background");
  border: design-token("shape.border_width.1") solid
    component-token("menu", "color.border");
  border-radius: component-token("menu", "border_radius");
  box-shadow: component-token("menu", "shadow");
}

.menu {
  overflow: auto;
  padding: component-token("menu", "padding.y") 0;
}

.option,
.listEmptyState {
  display: flex;
  flex-direction: column;
  justify-content: center;

  height: component-token("menu", "item_height");
  padding: 0 component-token("menu", "padding.x");
}

.option {
  position: relative;
  cursor: pointer;

  &[data-hovered],
  &[data-focused] {
    background: component-token("menu", "color.background.hovered");
  }

  &[data-disabled] {
    opacity: 0.5;
    cursor: default;
  }
}

.listEmptyState {
  align-items: center;
}

.spinnerContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  padding: component-token("menu", "padding.y") 0;
}

.spinner {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  height: component-token("menu", "item_height");
  padding: 0 component-token("menu", "padding.x");
}
