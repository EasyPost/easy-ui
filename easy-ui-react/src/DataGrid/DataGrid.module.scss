/* stylelint-disable scss/operator-no-newline-after */
/* stylelint-disable no-descending-specificity */

@use "../styles/common" as *;
@use "../styles/unstyled";

.container {
  @include component-token(
    "data-grid",
    "header-bg",
    design-token("color.blue.800")
  );
  @include component-token(
    "data-grid",
    "header-text",
    design-token("color.white")
  );
  @include component-token("data-grid", "header-row-height", 48px);
  @include component-token("data-grid", "body-row-height", 56px);
  @include component-token(
    "data-grid",
    "sort-icon-color",
    design-token("color.gray.500")
  );

  border: 1px solid design-token("color.gray.300");
  border-radius: design-token("shape.border_radius.md");
  overflow: auto;
  max-height: calc(
    2px +
      (
        component-token("data-grid", "header-row-height") +
          (
            component-token("data-grid", "body-row-height") *
              component-token("data-grid", "max-rows")
          )
      )
  );
  position: relative;
}

.DataGrid {
  position: relative;
  min-width: min-content;
  display: grid;
  grid-template-rows: auto;
  grid-template-areas: component-token("data-grid", "template-areas");
  grid-template-columns: component-token("data-grid", "template-columns");
}

.columnHeader {
  @include font-style("subtitle2");

  position: sticky;
  top: 0;
  background: component-token("data-grid", "header-bg");
  color: component-token("data-grid", "header-text");
  height: component-token("data-grid", "header-row-height");
  z-index: 3;
  outline: none;

  display: inline-flex;
  align-items: center;
  gap: design-token("space.1");
}

.sortIcon {
  display: inline-flex;
  color: component-token("data-grid", "sort-icon-color");
}

.sortIconIsSorted {
  @include component-token(
    "data-grid",
    "sort-icon-color",
    design-token("color.white")
  );
}

.row {
  display: contents;
}

.cell {
  @include font-style("body1");

  background: design-token("color.white");
  color: design-token("color.blue.800");
  height: component-token("data-grid", "body-row-height");
  z-index: 1;
}

.headerUnderScroll .columnHeader {
  &::after,
  &::before {
    content: "";
    position: absolute;
    top: 100%;
    left: 0;
    height: 8px;
    width: 100%;
  }
  &::before {
    background-color: white;
  }
  &::after {
    background-image: linear-gradient(to bottom, #7086b2, transparent);
    opacity: 0.5;
  }
}

.columnHeaderFocused,
.cellFocused {
  @include native-focus-ring;
  outline-offset: -1px;
}

.columnHeader,
.cell {
  display: inline-flex;
  align-items: center;
  padding: 0 design-token("space.2");

  &:first-child {
    padding-left: design-token("space.5");
  }
  &:last-child {
    padding-right: design-token("space.5");
  }
}

.expandRowButton {
  @include unstyled.button;

  display: inline-flex;
  align-items: center;
  justify-content: center;

  width: 24px;
  height: 24px;
  margin: -4px;

  cursor: pointer;

  &.expanded {
    transform: rotate(90deg);
  }
}

.pendingExpandedRowContent,
.expandedRowContent {
  position: absolute;
  left: 0;
}

.expandedRowContent {
  top: component-token("data-grid", "expanded-row-position");
  width: component-token("data-grid", "expanded-row-width");
  opacity: component-token("data-grid", "expanded-row-opacity");
  padding: design-token("space.1") design-token("space.5");
}

.pendingExpandedRowContent {
  top: 0;
  opacity: 0;
  pointer-events: none;
  width: component-token("data-grid", "pending-expanded-row-width");
}

.rowHovered {
  .cell {
    background: design-token("color.gray.050");
    color: design-token("color.blue.700");
  }
}

.rowExpanded {
  .cell {
    margin-bottom: component-token("data-grid", "expanded-row-height");
  }
}

.hasRowActions {
  .columnHeader,
  .cell {
    &:last-child {
      padding-left: design-token("space.0.5");
      padding-right: design-token("space.2");
      position: sticky;
      right: -12px;
      z-index: 2;
    }
    &:nth-last-child(2) {
      padding-right: design-token("space.1.5");
    }
  }
  .columnHeader {
    &:last-child {
      z-index: 4;
    }
  }
  &.rightEdgeUnderScroll .cell:last-child::before {
    content: "";
    position: absolute;
    right: 100%;
    top: 0;
    height: 100%;
    width: 8px;
    background-image: linear-gradient(to left, #7086b2, transparent);
    opacity: 0.25;
  }
}

.cell:nth-child(1) {
  position: sticky;
  left: -16px;
  z-index: 2;
}

.columnHeader:nth-child(1) {
  left: -16px;
  z-index: 4;
}

.leftEdgeUnderScroll:not(.hasSelection):not(.hasExpansion) .cell:nth-child(1),
.leftEdgeUnderScroll.hasSelection .cell:nth-child(2),
.leftEdgeUnderScroll.hasExpansion .cell:nth-child(2) {
  &::before {
    content: "";
    position: absolute;
    left: 100%;
    top: 0;
    height: 100%;
    width: 8px;
    background-image: linear-gradient(to right, #7086b2, transparent);
    opacity: 0.25;
  }
}

.hasSelection,
.hasExpansion {
  .cell:nth-child(1) {
    left: 0;
  }
  .columnHeader:nth-child(1) {
    left: 0;
  }
  .cell:nth-child(2) {
    position: sticky;
    left: 44px;
    z-index: 2;
  }
  .columnHeader:nth-child(2) {
    left: 44px;
    z-index: 4;
  }
  .columnHeader,
  .cell {
    &:first-child {
      padding-left: design-token("space.2");
      padding-right: design-token("space.1.5");
    }
    & + * {
      padding-left: 0;
    }
  }
}

.contents {
  display: contents;
}

.actionsCellContent {
  display: inline-flex;
  gap: design-token("space.1.5");
}

.headerSecondary {
  @include component-token(
    "data-grid",
    "header-bg",
    design-token("color.gray.050")
  );
  @include component-token(
    "data-grid",
    "header-text",
    design-token("color.blue.800")
  );

  @include component-token(
    "data-grid",
    "sort-icon-color",
    design-token("color.gray.400")
  );
  .sortIconIsSorted {
    @include component-token(
      "data-grid",
      "sort-icon-color",
      design-token("color.blue.800")
    );
  }
}
